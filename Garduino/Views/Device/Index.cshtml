@model IEnumerable<Garduino.Models.Device>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function() {
            function refreshPartial() {
                //this will wait 3 seconds and then fire the load partial function
                setTimeout(function() {
                        loadPartialView();
                        //recall this function so that it will continue to loop
                        refreshPartial();
                    },
                    3000);
            }

            //initialize the loop
            refreshPartial();
        });

        function loadPartialView() {
            $.ajax({
                url: '@Url.Action("GetDeviceItems", "Device")',
                type: 'post',
                cache: false,
                async: true,
                data: {},
                success: function(result) {
                    $('#devices').html(result);
                },
                error: function() {
                    $('#devices').html("nothing.");
                }
            });
        }
    </script>


    <script src="~/lib/signalR/signalr-client-1.0.0-alpha2-final.js"></script>
    @*
        TODO: fix notification when disconnected.
    *@

    <script type="text/javascript">
        var transport = signalR.TransportType.WebSockets;
        var connection = new signalR.HubConnection(`https://${document.location.host}/hub/device`, { transport: transport });
        var messageInput = document.getElementById('alerts');
        connection.on('newEntry',
            (name) => {
                var liElement = document.createElement('div');
                liElement.className = 'alert alert-info alert-dismissible';
                liElement.role = 'alert';
                liElement.innerHTML = '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                    'Device ' + name + ' added a new entry!';
                document.getElementById('alerts').appendChild(liElement);
            });
        connection.on('updateState',
            (name, message) => {
                var liElement = document.createElement('div');
                liElement.className = 'alert alert-danger alert-dismissible';
                liElement.role = 'alert';
                liElement.innerHTML =
                    '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                    'Device ' +
                    name +
                    ' ' +
                    message;
                document.getElementById('alerts').appendChild(liElement);
            });
        connection.on('codeFetched',
            (name, codeName) => {
                var liElement = document.createElement('div');
                liElement.className = 'alert alert-warning alert-dismissible';
                liElement.role = 'alert';
                liElement.innerHTML =
                    '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                    'Device ' +
                    name + ' is processing code ' + codeName + '...';
                document.getElementById('alerts').appendChild(liElement);
            });
        connection.on('codeDone',
            (name, codeName) => {
                var liElement = document.createElement('div');
                liElement.className = 'alert alert-success alert-dismissible';
                liElement.role = 'alert';
                liElement.innerHTML =
                    '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                    'Device ' +
                    name +
                    ' has completed code ' +
                    codeName + '!';
                document.getElementById('alerts').appendChild(liElement);
            });
        connection.start();
    </script>
}
<div id="alerts">
    
</div>
<div class="jumbotron">
    <div class="page-header">
        <h2>
            My Devices <small>&nbsp;All your devices, in one place!<a class="btn btn-primary pull-right" asp-controller="Device" asp-action="Create">Create a device</a></small>
        </h2>
    </div>
    <br />
    <ul class="list-group">
        <div id="devices">
            @await Html.PartialAsync("DeviceItems", Model)
        </div>
    </ul>
</div>